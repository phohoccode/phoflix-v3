"use client";

import { setReportError } from "@/store/slices/userSlice";
import { createListCollection, Portal, Select } from "@chakra-ui/react";
import { useDispatch } from "react-redux";

const options = createListCollection({
  items: [
    { label: "‚ùå Kh√¥ng th·ªÉ ph√°t phim", value: "‚ùå Kh√¥ng th·ªÉ ph√°t phim" },
    {
      label: "‚è≥ Phim load ch·∫≠m ho·∫∑c b·ªã gi·∫≠t",
      value: "‚è≥ Phim load ch·∫≠m ho·∫∑c b·ªã gi·∫≠t",
    },
    {
      label: "üìâ Ch·∫•t l∆∞·ª£ng video k√©m (m·ªù, nh√≤e, sai t·ª∑ l·ªá)",
      value: "üìâ Ch·∫•t l∆∞·ª£ng video k√©m (m·ªù, nh√≤e, sai t·ª∑ l·ªá)",
    },
    { label: "üé≠ Sai ho·∫∑c thi·∫øu ph·ª• ƒë·ªÅ", value: "üé≠ Sai ho·∫∑c thi·∫øu ph·ª• ƒë·ªÅ" },
    {
      label: "üîä Kh√¥ng c√≥ √¢m thanh ho·∫∑c √¢m thanh b·ªã l·ªách",
      value: "üîä Kh√¥ng c√≥ √¢m thanh ho·∫∑c √¢m thanh b·ªã l·ªách",
    },
    {
      label: "üó£ Sai ng√¥n ng·ªØ (thuy·∫øt minh/ph·ª• ƒë·ªÅ kh√¥ng ƒë√∫ng)",
      value: "üó£ Sai ng√¥n ng·ªØ (thuy·∫øt minh/ph·ª• ƒë·ªÅ kh√¥ng ƒë√∫ng)",
    },
    {
      label: "üé¨ Phim b·ªã c·∫Øt ho·∫∑c thi·∫øu t·∫≠p",
      value: "üé¨ Phim b·ªã c·∫Øt ho·∫∑c thi·∫øu t·∫≠p",
    },
    {
      label: "üîÑ Sai n·ªôi dung (nh·∫ßm t·∫≠p, nh·∫ßm b·∫£n phim)",
      value: "üîÑ Sai n·ªôi dung (nh·∫ßm t·∫≠p, nh·∫ßm b·∫£n phim)",
    },
    {
      label: "üìµ Kh√¥ng th·ªÉ t·∫£i trang phim",
      value: "üìµ Kh√¥ng th·ªÉ t·∫£i trang phim",
    },
    {
      label: "üîó Link phim b·ªã l·ªói (404, 500...)",
      value: "üîó Link phim b·ªã l·ªói (404, 500...)",
    },
    {
      label: "‚ùé L·ªói t∆∞∆°ng th√≠ch v·ªõi tr√¨nh duy·ªát / thi·∫øt b·ªã",
      value: "‚ùé L·ªói t∆∞∆°ng th√≠ch v·ªõi tr√¨nh duy·ªát / thi·∫øt b·ªã",
    },
  ],
});

const ErrorReportSelect = () => {
  const dispatch = useDispatch();


  const handleChangeSelect = (value: string) => {
    dispatch(setReportError(value));
  };

  return (
    <Select.Root
      collection={options}
      size="sm"
      onValueChange={(details) => handleChangeSelect(details?.value?.[0])}
    >
      <Select.HiddenSelect />
      <Select.Label>L·ªói m√† b·∫°n g·∫∑p ph·∫£i</Select.Label>
      <Select.Control>
        <Select.Trigger>
          <Select.ValueText
            placeholder="---Ch·ªçn l·ªói---"
            className="text-gray-50 border-gray-400 focus:border-gray-50"
          />
        </Select.Trigger>
        <Select.IndicatorGroup>
          <Select.Indicator />
        </Select.IndicatorGroup>
      </Select.Control>
      <Portal>
        <Select.Positioner
          css={{
            zIndex: "9999 !important",
          }}
        >
          <Select.Content className="max-w-[calc(460px-48px)]">
            {options.items.map((option) => (
              <Select.Item item={option} key={option.value}>
                {option.label}
                <Select.ItemIndicator />
              </Select.Item>
            ))}
          </Select.Content>
        </Select.Positioner>
      </Portal>
    </Select.Root>
  );
};

export default ErrorReportSelect;
